{"version":3,"sources":["components/NewBlog.js","services/blogs.js","components/Blog.js","components/Notification.js","services/login.js","App.js","index.js"],"names":["NewBlog","onBlogAdd","useState","title","setTitle","author","setAuthor","url","setUrl","onSubmit","e","preventDefault","id","type","value","name","onChange","target","token","createBlog","newBlog","a","config","headers","Authorization","axios","post","response","data","deleteBlog","delete","getAll","get","then","sort","b","likes","setToken","newToken","likeBlog","blogId","updatedBlog","put","Blog","blog","reRenderAfterEvent","isView","setView","mainUser","setMainUser","useEffect","savedUser","window","localStorage","getItem","user","JSON","parse","blogService","handleBlogView","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","onClick","handleLike","confirm","handleDelete","Notification","message","messageColor","messageStyle","color","width","backgroundColor","textAlign","fontSize","login","credentials","App","blogs","setBlogs","username","setUsername","password","setPassword","setUser","setMessage","setMessageColor","isNewBlogFormToggled","setNewBlogFormToggled","newBlogButtonText","setNewBlogButtonText","handleLogin","event","loginService","loggedUser","console","log","setItem","stringify","setTimeout","handleBlogAddition","removeItem","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.161dba36.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst NewBlog = ({ onBlogAdd }) => {\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [url, setUrl] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onBlogAdd({\r\n      title,\r\n      author,\r\n      url\r\n    });\r\n    setAuthor('')\r\n    setUrl('')\r\n    setTitle('')\r\n  }\r\n\r\n\treturn (\r\n\t\t<div>\r\n          <h2>Create your own blog!</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              title:\r\n                <input\r\n                id='title'\r\n                type=\"text\"\r\n                value={title}\r\n                name=\"Title\"\r\n                onChange={({ target }) => setTitle(target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              author\r\n                <input\r\n                id='author'\r\n                type=\"text\"\r\n                value={author}\r\n                name=\"Author\"\r\n                onChange={({ target }) => setAuthor(target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              url\r\n                <input\r\n                id='url'\r\n                type=\"text\"\r\n                value={url}\r\n                name=\"Url\"\r\n                onChange={({ target }) => setUrl(target.value)}\r\n              />\r\n            </div>            \r\n            <button type=\"submit\">create</button>\r\n          </form>              \r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NewBlog;","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n\ttoken = `bearer ${newToken}`;\r\n}\r\n\r\nconst createBlog = async newBlog => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\r\n\tconst response = await axios.post(baseUrl, newBlog, config)\r\n\treturn response.data\r\n}\r\n\r\nconst deleteBlog = async (id) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\r\n\tconst response = await axios.delete(`${baseUrl}/${id}`, config);\r\n\treturn response.data\r\n}\r\n\r\nconst likeBlog = async ( blogId, updatedBlog ) => {\r\n\tconst response = await axios.put(`${baseUrl}/${blogId}`, updatedBlog)\r\n\treturn response.data\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n  \treturn response.data.sort((a, b) => b.likes - a.likes)\r\n  })\r\n}\r\n\r\nexport default { getAll, createBlog, setToken, likeBlog, deleteBlog }","import React, { useState, useEffect } from 'react'\r\n\r\nimport blogService from '../services/blogs';\r\n\r\n\r\nconst Blog = ({ blog, reRenderAfterEvent }) => {\r\n\r\nconst [isView, setView] = useState(false);\r\nconst [mainUser, setMainUser] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const savedUser = window.localStorage.getItem('user')\r\n    if (savedUser) {\r\n        const user = JSON.parse(savedUser);\r\n        setMainUser(user);\r\n        blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\nconst handleBlogView = () => {\r\n\tsetView(!isView);\r\n\r\n}\r\n\r\nconst handleLike = (id, blog) => {\r\n\tconst updatedBlog = {\r\n\t\tuser: blog.user.id,\r\n\t\tlikes: ++ blog.likes,\r\n\t\tauthor: blog.author,\r\n\t\ttitle: blog.title,\r\n\t\turl: blog.url\r\n\t}\r\n\r\n\tblogService.likeBlog(id, updatedBlog)\r\n\treRenderAfterEvent()\r\n\r\n}\r\n\r\nconst handleDelete = (blog) => {\r\n\twindow.confirm(`Do you want to remove blog ${blog.title} by ${blog.author} ?`)\r\n\t\t\t&& blogService.deleteBlog(blog.id)\r\n\t\r\n}\r\n\r\n\treturn (\r\n\t  <div style={blogStyle} className='blog'>\r\n\t  \t{isView ? (\r\n\t\t\t  <div className='blog-details'>\r\n\t\t\t    <p>{blog.title}<button onClick={handleBlogView}>hide</button></p>\r\n\t\t\t    <p>{blog.url}</p>\r\n\t\t\t    <p className='liked'>{blog.likes}<button onClick={()=> handleLike(blog.id, blog)}>like</button></p>\r\n\t\t\t    <p>{blog.author}</p>\r\n\t\t\t    {mainUser.id === blog.user.id &&\r\n\t\t\t\t\t<button onClick={() => handleDelete(blog)}>Remove</button>\r\n\t\t\t    }\r\n\t\t\t  </div>\t  \t\t\t\r\n\t  \t\t) : (\r\n\t\t\t  <div className='blog-overview'>\r\n\t\t\t    {blog.title} {blog.author}<button onClick={handleBlogView}>view</button>\r\n\t\t\t  </div>\t  \t\t\r\n\t  \t\t)\r\n\t  \t}\r\n\t  </div>\r\n\t);\r\n}\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Notification = ({ message, messageColor }) => {\r\n\r\n\tconst messageStyle = {\r\n\t\tcolor: messageColor,\r\n\t\twidth: '100vw',\r\n\t\tborder: `3px solid ${messageColor}`,\r\n\t\tbackgroundColor: '#eee',\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: '25px'\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='message'>\r\n\t\t\t{message &&\r\n\t\t\t\t<div style={messageStyle}>\r\n\t\t\t\t\t<span>{message}</span>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  messageColor: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import axios from 'axios';\r\nconst baseUrl = 'api/login';\r\n\r\nconst login = async (credentials) => {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response.data\r\n}\r\n\r\nexport default { login };","import React, { useState, useEffect } from 'react';\r\nimport NewBlog from './components/NewBlog';\r\nimport Blog from './components/Blog';\r\n\r\nimport Notfication from './components/Notification';\r\n\r\nimport blogService from './services/blogs';\r\nimport loginService from './services/login';\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [username, setUsername] = useState(''); \r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [message, setMessage] = useState('')\r\n  const [messageColor, setMessageColor] = useState('')\r\n\r\n  const [isNewBlogFormToggled, setNewBlogFormToggled ] = useState(false);\r\n  const [newBlogButtonText, setNewBlogButtonText ] = useState('New blog');\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const loggedUser = await loginService.login({\r\n        username, password\r\n      })\r\n      console.log('user:', loggedUser)\r\n\r\n      window.localStorage.setItem(\r\n        'user', JSON.stringify(loggedUser)\r\n      )\r\n\r\n      blogService.setToken(loggedUser.token)\r\n      setUser(loggedUser);\r\n      setUsername('');\r\n      setPassword('');\r\n    } catch(e) {\r\n      setMessage('Invalid username or password');\r\n      setMessageColor('red')\r\n      setTimeout(() => {\r\n        setMessage(null);\r\n      }, 5000)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const savedUser = window.localStorage.getItem('user')\r\n    if (savedUser) {\r\n        const user = JSON.parse(savedUser);\r\n        setUser(user);\r\n        blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem('user')\r\n    setUser(null);\r\n  }\r\n\r\n  const toggleNewBlogsForm = () => {\r\n    setNewBlogFormToggled(!isNewBlogFormToggled);\r\n    isNewBlogFormToggled ? setNewBlogButtonText('New Blog') : setNewBlogButtonText('cancel')\r\n  }\r\n\r\n  const handleBlogAddition = async (newBlog) => {\r\n    const blog = await blogService.createBlog(newBlog);\r\n    setBlogs([...blogs, blog]);\r\n    setMessage(`a new blog \"${newBlog.title}\" by ${newBlog.author} was added`);\r\n    setMessageColor('green');\r\n    setTimeout(() => setMessage(null), 5000);\r\n    setNewBlogFormToggled(false);\r\n    setNewBlogButtonText('New Blog');    \r\n  }\r\n\r\n  const reRenderAfterEvent = () => {\r\n    setBlogs([...blogs])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notfication  message={message} messageColor={messageColor}/>\r\n    {user ? (\r\n        <div>\r\n          <h2>blogs</h2>\r\n          <p>Logged in as {user.name}<button onClick={logout}>Logout</button></p>\r\n          {isNewBlogFormToggled &&\r\n            <NewBlog onBlogAdd={handleBlogAddition}/>            \r\n          }\r\n          <button onClick={toggleNewBlogsForm}>{newBlogButtonText}</button>\r\n          <div className= 'blog-list'>\r\n            {\r\n              blogs.map(blog =>\r\n              <Blog key={blog.id} blog={blog} reRenderAfterEvent={reRenderAfterEvent} />\r\n            )              \r\n            }  \r\n          </div>          \r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>Log in to application</h2>\r\n          <form onSubmit={handleLogin}>\r\n            <div>\r\n              username\r\n                <input\r\n                id='username'\r\n                type=\"text\"\r\n                value={username}\r\n                name=\"Username\"\r\n                onChange={({ target }) => setUsername(target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              password\r\n                <input\r\n                id='password'\r\n                type=\"password\"\r\n                value={password}\r\n                name=\"Password\"\r\n                onChange={({ target }) => setPassword(target.value)}\r\n              />\r\n            </div>\r\n            <button id='login-button' type=\"submit\">login</button>\r\n          </form>          \r\n        </div>\r\n      )\r\n    }    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}